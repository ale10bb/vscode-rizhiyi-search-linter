[
    {
        "Command_Name": "abs", 
        "Supported functions and syntax": "abs(X)"
    }, 
    {
        "Command_Name": "acos", 
        "Supported functions and syntax": "acos(X)"
    }, 
    {
        "Command_Name": "acosh", 
        "Supported functions and syntax": "acosh(X)"
    }, 
    {
        "Command_Name": "asin", 
        "Supported functions and syntax": "asin(X)"
    }, 
    {
        "Command_Name": "asinh", 
        "Supported functions and syntax": "asinh(X)"
    }, 
    {
        "Command_Name": "atan", 
        "Supported functions and syntax": "atan(X)"
    }, 
    {
        "Command_Name": "atan2", 
        "Supported functions and syntax": "atan2(X,Y)"
    }, 
    {
        "Command_Name": "atanh", 
        "Supported functions and syntax": "atanh(X)"
    }, 
    {
        "Command_Name": "case", 
        "Supported functions and syntax": "case(X,\"Y\",...)"
    }, 
    {
        "Command_Name": "cidrmatch", 
        "Supported functions and syntax": "cidrmatch(\"X\",Y)"
    }, 
    {
        "Command_Name": "ceiling", 
        "Supported functions and syntax": "ceiling(X)"
    }, 
    {
        "Command_Name": "coalesce", 
        "Supported functions and syntax": "coalesce(X,...)"
    }, 
    {
        "Command_Name": "commands", 
        "Supported functions and syntax": "commands(X)"
    }, 
    {
        "Command_Name": "cos", 
        "Supported functions and syntax": "cos(X)"
    }, 
    {
        "Command_Name": "cosh", 
        "Supported functions and syntax": "cosh(X)"
    }, 
    {
        "Command_Name": "exact", 
        "Supported functions and syntax": "exact(X)"
    }, 
    {
        "Command_Name": "exp", 
        "Supported functions and syntax": "exp(X)"
    }, 
    {
        "Command_Name": "FALSE", 
        "Supported functions and syntax": "false()"
    }, 
    {
        "Command_Name": "floor", 
        "Supported functions and syntax": "floor(X)"
    }, 
    {
        "Command_Name": "hypot", 
        "Supported functions and syntax": "hypot(X,Y)"
    }, 
    {
        "Command_Name": "if", 
        "Supported functions and syntax": "if(X,Y,Z)"
    }, 
    {
        "Command_Name": "in", 
        "Supported functions and syntax": "in(VALUE-LIST)"
    }, 
    {
        "Command_Name": "isbool", 
        "Supported functions and syntax": "isbool(X)"
    }, 
    {
        "Command_Name": "isint", 
        "Supported functions and syntax": "isint(X)"
    }, 
    {
        "Command_Name": "isnotnull", 
        "Supported functions and syntax": "isnotnull(X)"
    }, 
    {
        "Command_Name": "isnull", 
        "Supported functions and syntax": "isnull(X)"
    }, 
    {
        "Command_Name": "isnum", 
        "Supported functions and syntax": "isnum(X)"
    }, 
    {
        "Command_Name": "isstr", 
        "Supported functions and syntax": "isstr(X)"
    }, 
    {
        "Command_Name": "len", 
        "Supported functions and syntax": "len(X)"
    }, 
    {
        "Command_Name": "like", 
        "Supported functions and syntax": "like(TEXT, PATTERN)"
    }, 
    {
        "Command_Name": "ln", 
        "Supported functions and syntax": "ln(X)"
    }, 
    {
        "Command_Name": "log", 
        "Supported functions and syntax": "log(X,Y)"
    }, 
    {
        "Command_Name": "lower", 
        "Supported functions and syntax": "lower(X)"
    }, 
    {
        "Command_Name": "ltrim", 
        "Supported functions and syntax": "ltrim(X,Y)"
    }, 
    {
        "Command_Name": "match", 
        "Supported functions and syntax": "match(SUBJECT, \"REGEX\")"
    }, 
    {
        "Command_Name": "max", 
        "Supported functions and syntax": "max(X,...)"
    }, 
    {
        "Command_Name": "md5", 
        "Supported functions and syntax": "md5(X)"
    }, 
    {
        "Command_Name": "min", 
        "Supported functions and syntax": "min(X,...)"
    }, 
    {
        "Command_Name": "mvappend", 
        "Supported functions and syntax": "mvappend(X,...)"
    }, 
    {
        "Command_Name": "mvcount", 
        "Supported functions and syntax": "mvcount(MVFIELD)"
    }, 
    {
        "Command_Name": "mvdedup", 
        "Supported functions and syntax": "mvdedup(X)"
    }, 
    {
        "Command_Name": "mvfilter", 
        "Supported functions and syntax": "mvfilter(X)"
    }, 
    {
        "Command_Name": "mvfind", 
        "Supported functions and syntax": "mvfind(MVFIELD,\"REGEX\")"
    }, 
    {
        "Command_Name": "mvindex", 
        "Supported functions and syntax": "mvindex(MVFIELD,STARTINDEX,ENDINDEX)"
    }, 
    {
        "Command_Name": "mvjoin", 
        "Supported functions and syntax": "mvjoin(MVFIELD,STR)"
    }, 
    {
        "Command_Name": "mvrange", 
        "Supported functions and syntax": "mvrange(X,Y,Z)"
    }, 
    {
        "Command_Name": "mvsort", 
        "Supported functions and syntax": "mvsort(X)"
    }, 
    {
        "Command_Name": "mvzip", 
        "Supported functions and syntax": "mvzip(X,Y,\"Z\")"
    }, 
    {
        "Command_Name": "now", 
        "Supported functions and syntax": "now()"
    }, 
    {
        "Command_Name": "null", 
        "Supported functions and syntax": "null()"
    }, 
    {
        "Command_Name": "nullif", 
        "Supported functions and syntax": "nullif(X,Y)"
    }, 
    {
        "Command_Name": "pi", 
        "Supported functions and syntax": "pi()"
    }, 
    {
        "Command_Name": "pow", 
        "Supported functions and syntax": "pow(X,Y)"
    }, 
    {
        "Command_Name": "printf", 
        "Supported functions and syntax": "printf(\"format\",arguments)"
    }, 
    {
        "Command_Name": "random", 
        "Supported functions and syntax": "random()"
    }, 
    {
        "Command_Name": "relative_time", 
        "Supported functions and syntax": "relative_time(X,Y)"
    }, 
    {
        "Command_Name": "replace", 
        "Supported functions and syntax": "replace(X,Y,Z)"
    }, 
    {
        "Command_Name": "round", 
        "Supported functions and syntax": "round(X,Y)"
    }, 
    {
        "Command_Name": "rtrim", 
        "Supported functions and syntax": "rtrim(X,Y)"
    }, 
    {
        "Command_Name": "searchmatch", 
        "Supported functions and syntax": "searchmatch(X)"
    }, 
    {
        "Command_Name": "sha1", 
        "Supported functions and syntax": "sha1(X)"
    }, 
    {
        "Command_Name": "sha256", 
        "Supported functions and syntax": "sha256(X)"
    }, 
    {
        "Command_Name": "sha512", 
        "Supported functions and syntax": "sha512(X)"
    }, 
    {
        "Command_Name": "sigfig", 
        "Supported functions and syntax": "sigfig(X)"
    }, 
    {
        "Command_Name": "sin", 
        "Supported functions and syntax": "sin(X)"
    }, 
    {
        "Command_Name": "sinh", 
        "Supported functions and syntax": "sinh(X)"
    }, 
    {
        "Command_Name": "spath", 
        "Supported functions and syntax": "spath(X,Y)"
    }, 
    {
        "Command_Name": "split", 
        "Supported functions and syntax": "split(X,\"Y\")"
    }, 
    {
        "Command_Name": "sqrt", 
        "Supported functions and syntax": "sqrt(X)"
    }, 
    {
        "Command_Name": "strftime", 
        "Supported functions and syntax": "strftime(X,Y)"
    }, 
    {
        "Command_Name": "strptime", 
        "Supported functions and syntax": "strptime(X,Y)"
    }, 
    {
        "Command_Name": "substr", 
        "Supported functions and syntax": "substr(X,Y,Z)"
    }, 
    {
        "Command_Name": "tan", 
        "Supported functions and syntax": "tan(X)"
    }, 
    {
        "Command_Name": "tanh", 
        "Supported functions and syntax": "tanh(X)"
    }, 
    {
        "Command_Name": "time", 
        "Supported functions and syntax": "time()"
    }, 
    {
        "Command_Name": "tonumber", 
        "Supported functions and syntax": "tonumber(NUMSTR,BASE)"
    }, 
    {
        "Command_Name": "tostring", 
        "Supported functions and syntax": "tostring(X,Y)"
    }, 
    {
        "Command_Name": "trim", 
        "Supported functions and syntax": "trim(X,Y)"
    }, 
    {
        "Command_Name": "TRUE", 
        "Supported functions and syntax": "true()"
    }, 
    {
        "Command_Name": "typeof", 
        "Supported functions and syntax": "typeof(X)"
    }, 
    {
        "Command_Name": "upper", 
        "Supported functions and syntax": "upper(X)"
    }, 
    {
        "Command_Name": "urldecode", 
        "Supported functions and syntax": "urldecode(X)"
    }, 
    {
        "Command_Name": "validate", 
        "Supported functions and syntax": "validate(X,Y,...)"
    }
]