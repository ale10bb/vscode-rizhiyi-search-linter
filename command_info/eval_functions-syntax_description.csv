Command_Name,Supported functions and syntax,Description
abs,abs(X),Returns the absolute value.
acos,acos(X),Computes the arc cosine of X.
acosh,acosh(X),Computes the arc hyperbolic cosine of X.
asin,asin(X),Computes the arc sine of X.
asinh,asinh(X),Computes the arc hyperbolic sine of X.
atan,atan(X),Computes the arc tangent of X.
atan2,"atan2(X,Y)","Computes the arc tangent of X,Y."
atanh,atanh(X),Computes the arc hyperbolic tangent of X.
case,"case(X,""Y"",...)",Accepts alternating conditions and values. Returns the first value for which the condition evaluates to TRUE.
cidrmatch,"cidrmatch(""X"",Y)",Returns TRUE or FALSE based on whether an IP address matches a CIDR notation.
ceiling,ceiling(X),Rounds the value up to the next highest integer.
coalesce,"coalesce(X,...)",This function takes an arbitrary number of arguments and returns the first value that is not NULL.
commands,commands(X),Returns a multivalued field that contains a list of the commands used in X.
cos,cos(X),Computes the cosine of an angle of X radians.
cosh,cosh(X),Computes the hyperbolic cosine of X radians.
exact,exact(X),Returns the result of a numeric eval calculation with a larger amount of precision in the formatted output.
exp,exp(X),Returns the exponential function eX.
FALSE,false(),Returns FALSE.
floor,floor(X),Rounds the value down to the next lowest integer.
hypot,"hypot(X,Y)",Computes the hypotenuse of a triangle.
if,"if(X,Y,Z)","If the condition X evaluates to TRUE, returns Y, otherwise returns Z."
in,in(VALUE-LIST),The function returns TRUE if one of the values in the list matches a value in the field you specify.
isbool,isbool(X),Returns TRUE if the field value is Boolean.
isint,isint(X),Returns TRUE if the field value is an integer.
isnotnull,isnotnull(X),Returns TRUE if the field value is not NULL.
isnull,isnull(X),Returns TRUE if the field value is NULL.
isnum,isnum(X),Returns TRUE if the field value is a number.
isstr,isstr(X),Returns TRUE if the field value is a string.
len,len(X),Returns the count of the number of characters (not bytes) in the string.
like,"like(TEXT, PATTERN)",Returns TRUE if TEXT matches PATTERN.
ln,ln(X),Returns the natural logarithm.
log,"log(X,Y)","Returns the logarithm of X using Y as the base. If Y is omitted, base 10 is used."
lower,lower(X),Converts the string to lowercase.
ltrim,"ltrim(X,Y)",Trims the characters represented in Y from the left side of the string.
match,"match(SUBJECT, ""REGEX"")",Returns TRUE or FALSE based on whether REGEX matches SUBJECT.
max,"max(X,...)",Returns the maximum of the string or numeric values.
md5,md5(X),Computes the md5 hash for the value X.
min,"min(X,...)",Returns the minimum of the string or numeric values.
mvappend,"mvappend(X,...)",Returns a multivalue result based on all of values specified.
mvcount,mvcount(MVFIELD),Returns the count of the number of values in the specified field.
mvdedup,mvdedup(X),Removes all of the duplicate values from a multivalue field.
mvfilter,mvfilter(X),Filters a multivalue field based on an arbitrary Boolean expression X.
mvfind,"mvfind(MVFIELD,""REGEX"")",Finds the index of a value in a multivalue field that matches the REGEX.
mvindex,"mvindex(MVFIELD,STARTINDEX,ENDINDEX)",Returns a set of values from a multivalue field described by STARTINDEX and ENDINDEX.
mvjoin,"mvjoin(MVFIELD,STR)",Takes all of the values in a multivalue field and appends them together delimited by STR.
mvrange,"mvrange(X,Y,Z)","Creates a multivalue field with a range of numbers between X and Y, incrementing by Z."
mvsort,mvsort(X),Returns the values of a multivalue field sorted lexicographically.
mvzip,"mvzip(X,Y,""Z"")","Takes two multivalue fields, X and Y, and combines them by stitching together the first value of X with the first value of field Y, then the second with the second, and so on."
now,now(),Returns the time that the search was started.
null,null(),This function takes no arguments and returns NULL.
nullif,"nullif(X,Y)","This function is used to compare fields. The function takes two arguments, X and Y, and returns NULL if X = Y. Otherwise it returns X."
pi,pi(),Returns the constant pi to 11 digits of precision.
pow,"pow(X,Y)","Returns X to the power of Y, XY."
printf,"printf(""format"",arguments)",Creates a formatted string based on a format description that you provide.
random,random(),Returns a pseudo-random integer ranging from zero to 231-1.
relative_time,"relative_time(X,Y)",Adjusts the time by a relative time specifier.
replace,"replace(X,Y,Z)",Returns a string formed by substituting string Z for every occurrence of regex string Y in string X.
round,"round(X,Y)",Returns X rounded to the amount of decimal places specified by Y. The default is to round to an integer.
rtrim,"rtrim(X,Y)",Returns X with the characters in Y trimmed from the right side.
searchmatch,searchmatch(X),Use this function to return TRUE if the search string (X) matches the event.
sha1,sha1(X),Computes the sha1 hash for the value X.
sha256,sha256(X),Computes the sha256 hash for the value X.
sha512,sha512(X),Computes the sha512 hash for the value X.
sigfig,sigfig(X),Rounds X to the appropriate number of significant figures.
sin,sin(X),Computes the sine of X.
sinh,sinh(X),Computes the hyperbolic sine of X.
spath,"spath(X,Y)",Extracts a value from a structured data type (XML or JSON) in X based on a location path in Y.
split,"split(X,""Y"")",Returns a mv field splitting X by the delimited character Y.
sqrt,sqrt(X),Returns the square root of the value.
strftime,"strftime(X,Y)",Takes a UNIX time and renders it into a human readable format.
strptime,"strptime(X,Y)",Takes a human readable time and renders it into UNIX time.
substr,"substr(X,Y,Z)",Returns a substring from X based on the starting position Y and the length Z.
tan,tan(X),Computes the tangent of X.
tanh,tanh(X),Computes the hyperbolic tangent of X.
time,time(),"The time that eval function was computed. The time will be different for each event, based on when the event was processed."
tonumber,"tonumber(NUMSTR,BASE)",Converts a string to a number.
tostring,"tostring(X,Y)","Converts the input, such as a number or a Boolean value, to a string."
trim,"trim(X,Y)",Trims the characters represented in Y from both sides of the string X.
TRUE,true(),Returns TRUE.
typeof,typeof(X),"Returns a string that indicates the field type, such as Number, String, Boolean, and so forth."
upper,upper(X),Returns the string in uppercase.
urldecode,urldecode(X),Replaces URL escaped characters with the original characters.
validate,"validate(X,Y,...)",Use this function to return the string Y corresponding to the first expression X that evaluates to FALSE. This function is the opposite of the case function.
